//Cindy-2.0-beta build 590 (2006/01/02 19:14)
//Created on: Jan 5, 2006 11:02:55 PM
//For: richter
//DO NOT EDIT --- MACHINE GENERATED CODE
Geometry:=Euclidean;
("A"):=FreePoint([-0.7096774193548386+i*-0.0,4.0+i*0.0,-1.6129032258064515+i*-0.0]);
"A".setAppearance(2,3,1,0,0,9,false,false);
"A".setAttribute("color","2");
"A".setAttribute("visibility","9");
"A".setAttribute("drawtrace","false");
"A".setAttribute("tracelength","100");
"A".setAttribute("traceskip","1");
"A".setAttribute("tracedim","1.0");
"A".setAttribute("render","false");
"A".setAttribute("pinning","false");
"A".setAttribute("labeled","false");
"A".setAttribute("ptsize","3");
"A".setAttribute("pointborder","true");
"A".setLabelPos(3,3,1,false,0.0,0.2,1);
("B"):=FreePoint([-1.6377952755905512+i*-0.0,4.0+i*0.0,-0.7874015748031497+i*-0.0]);
"B".setAppearance(2,3,1,0,0,9,false,false);
"B".setAttribute("color","2");
"B".setAttribute("visibility","9");
"B".setAttribute("drawtrace","false");
"B".setAttribute("tracelength","100");
"B".setAttribute("traceskip","1");
"B".setAttribute("tracedim","1.0");
"B".setAttribute("render","false");
"B".setAttribute("pinning","false");
"B".setAttribute("labeled","false");
"B".setAttribute("ptsize","3");
"B".setAttribute("pointborder","true");
"B".setLabelPos(3,3,1,false,0.0,0.2,1);
("C"):=FreePoint([4.0+i*0.0,3.526315789473684+i*0.0,-1.3157894736842106+i*-0.0]);
"C".setAppearance(2,3,1,0,0,9,false,false);
"C".setAttribute("color","2");
"C".setAttribute("visibility","9");
"C".setAttribute("drawtrace","false");
"C".setAttribute("tracelength","100");
"C".setAttribute("traceskip","1");
"C".setAttribute("tracedim","1.0");
"C".setAttribute("render","false");
"C".setAttribute("pinning","false");
"C".setAttribute("labeled","false");
"C".setAttribute("ptsize","3");
"C".setAttribute("pointborder","true");
"C".setLabelPos(3,3,1,false,0.0,0.2,1);
("D"):=FreePoint([-2.697142857142857+i*-0.0,4.0+i*0.0,-0.5714285714285714+i*-0.0]);
"D".setAppearance(2,3,1,0,0,9,false,false);
"D".setAttribute("color","2");
"D".setAttribute("visibility","9");
"D".setAttribute("drawtrace","false");
"D".setAttribute("tracelength","100");
"D".setAttribute("traceskip","1");
"D".setAttribute("tracedim","1.0");
"D".setAttribute("render","false");
"D".setAttribute("pinning","false");
"D".setAttribute("labeled","false");
"D".setAttribute("ptsize","3");
"D".setAttribute("pointborder","true");
"D".setLabelPos(3,3,1,false,0.0,0.2,1);
("E"):=FreePoint([4.0+i*0.0,-2.754491017964072+i*0.0,0.5988023952095808+i*0.0]);
"E".setAppearance(2,3,1,0,0,9,false,false);
"E".setAttribute("color","2");
"E".setAttribute("visibility","9");
"E".setAttribute("drawtrace","false");
"E".setAttribute("tracelength","100");
"E".setAttribute("traceskip","1");
"E".setAttribute("tracedim","1.0");
"E".setAttribute("render","false");
"E".setAttribute("pinning","false");
"E".setAttribute("labeled","false");
"E".setAttribute("ptsize","3");
"E".setAttribute("pointborder","true");
"E".setLabelPos(3,3,1,false,0.0,0.2,1);
("F"):=FreePoint([4.0+i*0.0,-0.5419354838709677+i*-0.0,-0.6451612903225806+i*-0.0]);
"F".setAppearance(2,3,1,0,0,9,false,false);
"F".setAttribute("color","2");
"F".setAttribute("visibility","9");
"F".setAttribute("drawtrace","false");
"F".setAttribute("tracelength","100");
"F".setAttribute("traceskip","1");
"F".setAttribute("tracedim","1.0");
"F".setAttribute("render","false");
"F".setAttribute("pinning","false");
"F".setAttribute("labeled","false");
"F".setAttribute("ptsize","3");
"F".setAttribute("pointborder","true");
"F".setLabelPos(3,3,1,false,0.0,0.2,1);
("G"):=FreePoint([0.5652173913043479+i*0.0,4.0+i*0.0,-1.0869565217391304+i*-0.0]);
"G".setAppearance(2,3,1,0,0,9,false,false);
"G".setAttribute("color","2");
"G".setAttribute("visibility","9");
"G".setAttribute("drawtrace","false");
"G".setAttribute("tracelength","100");
"G".setAttribute("traceskip","1");
"G".setAttribute("tracedim","1.0");
"G".setAttribute("render","false");
"G".setAttribute("pinning","false");
"G".setAttribute("labeled","false");
"G".setAttribute("ptsize","3");
"G".setAttribute("pointborder","true");
"G".setLabelPos(3,3,1,false,0.0,0.2,1);
("H"):=FreePoint([-3.5955056179775284+i*-0.0,4.0+i*0.0,-1.1235955056179776+i*-0.0]);
"H".setAppearance(2,3,1,0,0,9,false,false);
"H".setAttribute("color","2");
"H".setAttribute("visibility","9");
"H".setAttribute("drawtrace","false");
"H".setAttribute("tracelength","100");
"H".setAttribute("traceskip","1");
"H".setAttribute("tracedim","1.0");
"H".setAttribute("render","false");
"H".setAttribute("pinning","false");
"H".setAttribute("labeled","false");
"H".setAttribute("ptsize","3");
"H".setAttribute("pointborder","true");
"H".setLabelPos(3,3,1,false,0.0,0.2,1);
("K"):=FreePoint([3.6470588235294112+i*0.0,4.0+i*0.0,-2.941176470588235+i*-0.0]);
"K".setAppearance(2,3,1,0,0,9,false,false);
"K".setAttribute("color","2");
"K".setAttribute("visibility","9");
"K".setAttribute("drawtrace","false");
"K".setAttribute("tracelength","100");
"K".setAttribute("traceskip","1");
"K".setAttribute("tracedim","1.0");
"K".setAttribute("render","false");
"K".setAttribute("pinning","false");
"K".setAttribute("labeled","false");
"K".setAttribute("ptsize","3");
"K".setAttribute("pointborder","true");
"K".setLabelPos(3,3,1,false,0.0,0.2,1);
Geometry:=Euclidean;
behavior {Environment();
          setParams(1.0,0.0,0.0);
          addToLevel(1);
         }
behavior {Motor();
          setParams(1.0,0.1,0.0);
          addToLevel(1);
         }
kernel.setAcc(2);
kernel.setFrames(1);
kernel.setSpeed(1.0);
kernel.newScript("Draw","");
kernel.appendScript("pts=allpoints();");
kernel.appendScript("m=apply(pts,(1,#.x));");
kernel.appendScript("y=apply(pts,#.y);");
kernel.appendScript("ma=transpose(m)*m;");
kernel.appendScript("mb=transpose(m)*y;");
kernel.appendScript("mainv=[[ma_2_2,-ma_1_2],[-ma_2_1,ma_1_1]]/det(ma);");
kernel.appendScript("v=mainv*mb;");
kernel.appendScript("f(x):=v_2*x+v_1;");
kernel.appendScript("plot(f(x));");
kernel.appendScript("");
kernel.appendScript("sq(x,y1,y2):=(");
kernel.appendScript("   d=y2-y1;");
kernel.appendScript("   p=((x,y1),(x,y2),(x+d,y2),(x+d,y1),(x,y1));");
kernel.appendScript("   drawpoly(p,color->(1,0.5,0.5),alpha->0.4);");
kernel.appendScript("   connect(p,color->(.8,0,0));");
kernel.appendScript(");");
kernel.appendScript("");
kernel.appendScript("forall(pts,sq(#.x,#.y,(f(#.x))));");
kernel.appendScript("");
kernel.setCompiler("de.cinderella.geometry.formula.CindyScriptCompiler");
kernel.endScript();
//Start portinfo
kernel.setBackgroundColor(168,176,192);
kernel.setBlackColor(0,0,0);
kernel.setHighlightColor(255,255,255);
port EuclideanPort() {
   setAttribute("imagescalemode","scalemode.center");
   setAttribute("imagealpha","1.0");
   setAttribute("image.filename","");
   setAttribute("show.adjacencymatrix","1");
   setAttribute("show.vertexqueue","");
   setAttribute("mesh.rectangular","false");
   setAttribute("mesh.triangular","false");
   setAttribute("axes.show","false");
   setAttribute("snap","false");
   setAttribute("mesh.density","0");
   setPolar(false);
   setPortWidth(650);
   setPortHeight(350);
   setScale(25.0);
   setOriginY(216);
   setOriginX(233);
   setMesh(false);
   setAxes(false);
   setSnap(false);
}
//End portinfo
